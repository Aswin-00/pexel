name: Deploy to EC2 🚀



on:
  push:
    branches: [ "new_main" ]
  pull_request:
    branches: [ "new_main" ]
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout current branch ✅
        uses: actions/checkout@v2

      - name: Set up SSH key and whitelist EC2 IP address 🐻‍❄️
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Create .env file dynamically 🧨
        env:
          AWS_S3_SIGNATURE_NAME: ${{secrets.AWS_S3_SIGNATURE_NAME}}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_STORAGE_BUCKET_NAME: ${{ secrets.AWS_STORAGE_BUCKET_NAME }}
          AWS_S3_REGION_NAME: ${{ secrets.AWS_S3_REGION_NAME }}
          AWS_S3_FILE_OVERWRITE: ${{ secrets.AWS_S3_FILE_OVERWRITE }}
          AWS_S3_VERITY: ${{ secrets.AWS_S3_VERITY }}
          AWS_DEFAULT_ACL: ${{ secrets.AWS_DEFAULT_ACL }}
          DATABASE_NAME: ${{ secrets.AWS_DEFAULT_ACL }}
          DATABASE_USER: ${{ secrets.DATABASE_USER }}
          DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
          DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}

        
        run: |
          echo "AWS_S3_SIGNATURE_NAME='${AWS_S3_SIGNATURE_NAME}'">>env
          echo "AWS_ACCESS_KEY_ID='${AWS_ACCESS_KEY_ID}'" >> env
          echo "AWS_SECRET_ACCESS_KEY='${AWS_SECRET_ACCESS_KEY}'" >> env
          echo "AWS_STORAGE_BUCKET_NAME='${AWS_STORAGE_BUCKET_NAME}'" >> env
          echo "AWS_S3_REGION_NAME='${AWS_S3_REGION_NAME}'" >> env
          echo "AWS_S3_FILE_OVERWRITE=${AWS_S3_FILE_OVERWRITE}" >> env
          echo "AWS_S3_VERITY=True" >> env
          echo "AWS_DEFAULT_ACL='${AWS_DEFAULT_ACL}'" >> env
          echo "DATABASE_NAME='${DATABASE_NAME}'" >> env
          echo "DATABASE_USER='${DATABASE_USER}'" >> env
          echo "DATABASE_HOST='${DATABASE_HOST}'" >> env
          echo "DATABASE_PASSWORD='${DATABASE_PASSWORD}'" >> env



      - name: Copy files to remote server 🚙
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
        run: |
          echo "copy file"
          ssh -o StrictHostKeyChecking=no $EC2_USERNAME@$EC2_HOST "mkdir PEXELS"
          scp -r * $EC2_USERNAME@$EC2_HOST:/home/ubuntu/

      - name: Run Bash Script To Delpoy App 🚀
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
        run: |
          ssh -o StrictHostKeyChecking=no $EC2_USERNAME@$EC2_HOST "chmod +x ./deploy.sh && ./deploy.sh"


      - name: Clean up SSH key 🚀
        if: always()
        run: rm -f ~/.ssh/id_rsa
